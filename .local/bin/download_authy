#!/bin/sh
# Utility to download and extract Authy from Snap.
# Git is required for version management.

VERSION=""
OLD_VERSION=""

TEMPFILE=$(mktemp --tmpdir authy.XXXXXX)
TEMPFOLDER=$(mktemp -d --tmpdir authy.XXXXXX)

SNAPDATA=""

get_version()  {
  # If git is installed, use it. Otherwise, fallback to file.
  [ ! -d "$HOME/.authy" ] && return

  _ver=""
  if command -v git > /dev/null; then
    cd "$HOME/.authy" || return
    _ver=$(git describe)
  else
    _ver=$(cat "$HOME/.authy/.version")
  fi

  echo "$_ver"
}

set_version()  {
  # If git is installed, use it. Otherwise, fallback to file.
  [ ! -d "$HOME/.authy" ] && return

  if command -v git > /dev/null; then
    cd "$HOME/.authy" || return
    git init
    git checkout main
    git add .
    git commit -m "$VERSION"
    git tag "$VERSION" -m "$VERSION"
    git checkout "$VERSION" -q
  else
    echo "$VERSION" >> "$HOME/.authy/.version"
  fi
}

get_data()  {
  SNAPDATA=$(curl -s -H 'Snap-Device-Series: 16' "https://api.snapcraft.io/v2/snaps/info/authy")
  if [ -z "$SNAPDATA" ]; then
    echo "Couldn't get snap data! Exitting."
    exit 1
  fi
}

check_version()  {
  VERSION=$(printf '%s' "$SNAPDATA" | jq -r '.["channel-map"][0]["version"]')
  if [ -z "$VERSION" ]; then
    echo "Couldn't determine upstream version! Exitting."
    exit 1
  fi
  OLD_VERSION=$(get_version)
  if dpkg --compare-versions "$VERSION" le "$OLD_VERSION" 2> /dev/null; then
    echo Looks like Authy is already updated. Exitting.
    exit 0
  fi
}

download()  {
  url=$(printf '%s' "$SNAPDATA" | jq -r '.["channel-map"][0].download.url')
  if [ -z "$url" ]; then
    echo "Couldn't get download url! Exitting."
    exit 1
  fi
  echo "Downloading Authy v$VERSION..."
  wget -q -O "$TEMPFILE" --show-progress "$url"
}

extract()  {
  echo "Extracting..."
  unsquashfs -q -f -d "$TEMPFOLDER" "$TEMPFILE"
}

install()  {
  echo "Installing..."

  # shellcheck disable=SC2016
  sed -i 's|${SNAP}/meta/gui/icon.png|authy|g' "${TEMPFOLDER:?}/meta/gui/authy.desktop"

  echo Enter your password to continue:
  sudo -k

  # Create shortcut and icon
  sudo mv -u "${TEMPFOLDER:?}/meta/gui/authy.desktop" "/usr/share/applications/authy.desktop"
  sudo mv -u "${TEMPFOLDER:?}/meta/gui/icon.png" "/usr/share/pixmaps/authy.png"

  # Remove unecessary files
  cd "$TEMPFOLDER" || exit 1
  rm -rf ./data-dir ./gnome-platform ./lib ./meta ./scripts ./usr ./*.sh

  # Move folder to install location
  rsync -a "${TEMPFOLDER:?}/" "$HOME/.authy"
  set_version "$VERSION"

  # Symlink binary
  sudo ln -fs "$HOME/.authy/authy" "/usr/bin/"
}

post_install()  {
  if [ -z "$OLD_VERSION" ]; then
    echo "Successfully installed Authy v$VERSION!"
  else
    echo "Successfully updated Authy from v$OLD_VERSION to v$VERSION!"
  fi
}

get_data
check_version
download
extract
install
post_install
